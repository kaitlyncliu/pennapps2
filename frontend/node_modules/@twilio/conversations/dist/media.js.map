{"version":3,"file":"media.js","sources":["../src/media.ts"],"sourcesContent":["import {\n  McsClient,\n  McsMedia,\n  MediaCategory as McsMediaCategory,\n} from \"@twilio/mcs-client\";\n\n/**\n * Category of media. Possible values are as follows:\n * * `'media'`\n * * `'body'`\n * * `'history'`\n */\ntype MediaCategory = McsMediaCategory;\n\ninterface MediaState {\n  sid: string;\n  category: MediaCategory;\n  filename: string | null;\n  contentType: string;\n  size: number;\n}\n\ninterface MediaServices {\n  mcsClient: McsClient;\n}\n\n/**\n * Represents a media information for a message in a conversation.\n */\nclass Media {\n  private state: MediaState;\n  private services: MediaServices;\n  private mcsMedia: McsMedia | null = null;\n\n  /**\n   * @internal\n   */\n  constructor(data: MediaState | McsMedia, services: MediaServices) {\n    this.services = services;\n\n    if (data instanceof McsMedia) {\n      this.mcsMedia = data as McsMedia;\n    }\n\n    this.state = {\n      sid: data.sid,\n      category: data.category,\n      filename: data.filename,\n      contentType: data.contentType,\n      size: data.size,\n    };\n  }\n\n  /**\n   * Server-assigned unique identifier for the media.\n   */\n  public get sid(): string {\n    return this.state.sid;\n  }\n\n  /**\n   * File name. Null if absent.\n   */\n  public get filename(): string | null {\n    return this.state.filename;\n  }\n\n  /**\n   * Content type of the media.\n   */\n  public get contentType(): string {\n    return this.state.contentType;\n  }\n\n  /**\n   * Size of the media in bytes.\n   */\n  public get size(): number {\n    return this.state.size;\n  }\n\n  /**\n   * Media category, can be one of the {@link MediaCategory} values.\n   */\n  public get category(): MediaCategory {\n    return this.state.category;\n  }\n\n  /**\n   * Returns the direct content URL for the media.\n   *\n   * This URL is impermanent, it will expire in several minutes and cannot be cached.\n   * If the URL becomes expired, you need to request a new one.\n   * Each call to this function produces a new temporary URL.\n   */\n  public async getContentTemporaryUrl(): Promise<string | null> {\n    await this._fetchMcsMedia();\n    return this.mcsMedia?.getContentUrl() ?? null;\n  }\n\n  /**\n   * Returns cached direct content URL for the media.\n   *\n   * This URL will expire in several minutes. This function does not refresh the URL and can be used to query it several times\n   * without causing network traffic.\n   * If the URL becomes expired, you need to request a new one using getContentTemporaryUrl().\n   *\n   * @returns {Promise<String>}\n   */\n  public async getCachedTemporaryUrl(): Promise<string | null> {\n    await this._fetchMcsMedia();\n    return this.mcsMedia?.getCachedContentUrl() ?? null;\n  }\n\n  private async _fetchMcsMedia() {\n    if (!this.mcsMedia) {\n      if (this.services.mcsClient) {\n        this.mcsMedia = await this.services.mcsClient.get(this.state.sid);\n      } else {\n        throw new Error(\"Media Content Service is unavailable\");\n      }\n    }\n  }\n}\n\nexport { Media, MediaState, MediaServices, MediaCategory };\n"],"names":["McsMedia"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;;AAGA,MAAM,KAAK;;;;IAQT,YAAY,IAA2B,EAAE,QAAuB;QALxD,aAAQ,GAAoB,IAAI,CAAC;QAMvC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,IAAI,YAAYA,kBAAQ,EAAE;YAC5B,IAAI,CAAC,QAAQ,GAAG,IAAgB,CAAC;SAClC;QAED,IAAI,CAAC,KAAK,GAAG;YACX,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC;KACH;;;;IAKD,IAAW,GAAG;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;KACvB;;;;IAKD,IAAW,QAAQ;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;KAC5B;;;;IAKD,IAAW,WAAW;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;KAC/B;;;;IAKD,IAAW,IAAI;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;KACxB;;;;IAKD,IAAW,QAAQ;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;KAC5B;;;;;;;;IASM,MAAM,sBAAsB;;QACjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,OAAO,MAAA,MAAA,IAAI,CAAC,QAAQ,0CAAE,aAAa,EAAE,mCAAI,IAAI,CAAC;KAC/C;;;;;;;;;;IAWM,MAAM,qBAAqB;;QAChC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,OAAO,MAAA,MAAA,IAAI,CAAC,QAAQ,0CAAE,mBAAmB,EAAE,mCAAI,IAAI,CAAC;KACrD;IAEO,MAAM,cAAc;QAC1B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;gBAC3B,IAAI,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACnE;iBAAM;gBACL,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;aACzD;SACF;KACF;;;;;"}