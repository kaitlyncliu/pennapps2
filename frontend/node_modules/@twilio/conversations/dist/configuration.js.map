{"version":3,"file":"configuration.js","sources":["../src/configuration.ts"],"sourcesContent":["import { ConfigurationResponse } from \"./interfaces/commands/configuration\";\nimport { parse as parseDuration, toSeconds } from \"iso8601-duration\";\nimport { Logger } from \"./logger\";\nimport { ConversationLimits } from \"./interfaces/conversation-limits\";\nimport { ClientOptions } from \"./client\";\n\nconst TYPING_TIMEOUT = 5;\nconst HTTP_CACHE_LIFETIME = \"PT5S\";\nconst CONSUMPTION_HORIZON_SENDING_INTERVAL = \"PT5S\";\nconst USER_INFOS_TO_SUBSCRIBE = 100;\n\nconst MINIMUM_RETRY_DELAY = 1000;\nconst MAXIMUM_RETRY_DELAY = 4000;\nconst MAXIMUM_ATTEMPTS_COUNT = 3;\nconst RETRY_WHEN_THROTTLED = true;\n\ninterface BackoffConfiguration {\n  min: number;\n  max: number;\n  maxAttemptsCount: number;\n}\n\nclass Configuration {\n  public readonly links: {\n    myConversations: string;\n    conversations: string;\n    users: string;\n    currentUser: string;\n    typing: string;\n    mediaService: string;\n    mediaSetService: string;\n    messagesReceipts: string;\n  };\n\n  public readonly limits: ConversationLimits;\n\n  public readonly productId?: string;\n\n  public readonly typingIndicatorTimeoutOverride?: number;\n  public readonly typingIndicatorTimeoutDefault: number = TYPING_TIMEOUT * 1000;\n  public readonly backoffConfiguration: BackoffConfiguration;\n  public readonly retryWhenThrottled: boolean;\n\n  public readonly consumptionReportInterval: number;\n  public readonly userInfosToSubscribe: number;\n  public readonly httpCacheInterval: number;\n  public readonly reachabilityEnabled: boolean;\n\n  public readonly userIdentity: string;\n  public readonly userInfo: string;\n  public readonly myConversations: string;\n\n  constructor(\n    options: ClientOptions = {},\n    configurationResponse: ConfigurationResponse,\n    logger: Logger\n  ) {\n    const constructorOptions =\n      options.Chat || options.IPMessaging || options || {};\n\n    this.productId = constructorOptions.productId;\n\n    this.links = {\n      myConversations: configurationResponse.links.my_conversations,\n      conversations: configurationResponse.links.conversations,\n      users: configurationResponse.links.users,\n      currentUser: configurationResponse.links.current_user,\n      typing: configurationResponse.links.typing,\n      mediaService: configurationResponse.links.media_service,\n      mediaSetService: configurationResponse.links.media_set_service,\n      messagesReceipts: configurationResponse.links.messages_receipts,\n    };\n\n    this.limits = {\n      mediaAttachmentsCountLimit:\n        configurationResponse.options.media_attachments_count_limit,\n      mediaAttachmentSizeLimitInMb:\n        configurationResponse.options.media_attachment_size_limit_in_mb,\n      mediaAttachmentsTotalSizeLimitInMb:\n        configurationResponse.options.media_attachments_total_size_limit_in_mb,\n      emailHistoriesAllowedMimeTypes:\n        configurationResponse.options.email_histories_allowed_mime_types,\n      emailBodiesAllowedMimeTypes:\n        configurationResponse.options.email_bodies_allowed_mime_types,\n    };\n\n    this.typingIndicatorTimeoutOverride =\n      constructorOptions.typingIndicatorTimeoutOverride;\n    this.backoffConfiguration = {\n      min: MINIMUM_RETRY_DELAY,\n      max: MAXIMUM_RETRY_DELAY,\n      maxAttemptsCount: MAXIMUM_ATTEMPTS_COUNT,\n      ...constructorOptions.backoffConfigOverride,\n    };\n    this.retryWhenThrottled =\n      constructorOptions.retryWhenThrottledOverride !== undefined\n        ? constructorOptions.retryWhenThrottledOverride\n        : RETRY_WHEN_THROTTLED;\n    this.userInfosToSubscribe =\n      constructorOptions.userInfosToSubscribeOverride ??\n      configurationResponse.options.user_infos_to_subscribe ??\n      USER_INFOS_TO_SUBSCRIBE;\n    this.reachabilityEnabled =\n      configurationResponse.options.reachability_enabled;\n    this.userIdentity = configurationResponse.identity;\n    this.userInfo = configurationResponse.sync_objects.my_user_info;\n    this.myConversations = configurationResponse.sync_objects.my_conversations;\n\n    const httpCacheInterval =\n      constructorOptions.httpCacheIntervalOverride ??\n      configurationResponse.options.http_cache_interval ??\n      HTTP_CACHE_LIFETIME;\n\n    try {\n      this.httpCacheInterval = toSeconds(parseDuration(httpCacheInterval));\n    } catch {\n      logger.error(\n        `Failed to parse http cache interval ${httpCacheInterval}, using default value ${HTTP_CACHE_LIFETIME}`\n      );\n      this.httpCacheInterval = toSeconds(parseDuration(HTTP_CACHE_LIFETIME));\n    }\n\n    const consumptionReportInterval =\n      constructorOptions.consumptionReportIntervalOverride ??\n      configurationResponse.options.consumption_report_interval ??\n      CONSUMPTION_HORIZON_SENDING_INTERVAL;\n\n    try {\n      this.consumptionReportInterval = toSeconds(\n        parseDuration(consumptionReportInterval)\n      );\n    } catch {\n      logger.error(\n        `Failed to parse consumption report interval ${consumptionReportInterval}, using default value ${CONSUMPTION_HORIZON_SENDING_INTERVAL}`\n      );\n      this.consumptionReportInterval = toSeconds(\n        parseDuration(CONSUMPTION_HORIZON_SENDING_INTERVAL)\n      );\n    }\n  }\n}\n\nexport { Configuration };\n"],"names":["toSeconds","parseDuration"],"mappings":"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"}